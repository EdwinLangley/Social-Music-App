/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicsocial;

import DataPacket.DataPacket;
import DataPacket.NetworkInterfaces;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Edwin
 */
public class UploadSong extends javax.swing.JFrame {

    /**
     * Creates new form UploadSong
     */
    public UploadSong() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newSongLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        artistField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        artistName = new javax.swing.JLabel();
        dubstepCheckBox = new javax.swing.JCheckBox();
        punkCheckBox = new javax.swing.JCheckBox();
        SoulCheckBox = new javax.swing.JCheckBox();
        reggaeCheckBox = new javax.swing.JCheckBox();
        funkCheckBox = new javax.swing.JCheckBox();
        metalCheckBox = new javax.swing.JCheckBox();
        rapCheckBox = new javax.swing.JCheckBox();
        rockCheckBox = new javax.swing.JCheckBox();
        rnbCheckBox = new javax.swing.JCheckBox();
        popCheckBox = new javax.swing.JCheckBox();
        countryCheckBox = new javax.swing.JCheckBox();
        kPopCheckBox = new javax.swing.JCheckBox();
        edmCheckBox = new javax.swing.JCheckBox();
        latinCheckBox = new javax.swing.JCheckBox();
        genresLabel = new javax.swing.JLabel();
        dnbCheckBox = new javax.swing.JCheckBox();
        jazzCheckBox = new javax.swing.JCheckBox();
        technoCheckBox = new javax.swing.JCheckBox();
        altrockCheckBox = new javax.swing.JCheckBox();
        bluesCheckBox = new javax.swing.JCheckBox();
        houseCheckBox = new javax.swing.JCheckBox();
        fileSelectionLabel = new javax.swing.JLabel();
        songSelectorButton = new javax.swing.JButton();
        selectedSongLabel = new javax.swing.JLabel();
        addSongButton = new javax.swing.JButton();
        albumArtLabel = new javax.swing.JLabel();
        albumArtFrame = new javax.swing.JLabel();
        addArtButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Song Uploader");

        newSongLabel.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 48)); // NOI18N
        newSongLabel.setText("Upload New Song");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        nameLabel.setText("Name");

        artistName.setText("Artist");

        dubstepCheckBox.setText("Dubstep");
        dubstepCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dubstepCheckBoxActionPerformed(evt);
            }
        });

        punkCheckBox.setText("Punk");

        SoulCheckBox.setText("Soul");

        reggaeCheckBox.setText("Reggae");

        funkCheckBox.setText("Funk");

        metalCheckBox.setText("Metal");

        rapCheckBox.setText("Rap");

        rockCheckBox.setText("Rock");

        rnbCheckBox.setText("R&B");

        popCheckBox.setText("Pop");

        countryCheckBox.setText("Country");

        kPopCheckBox.setText("K-Pop");

        edmCheckBox.setText("EDM");

        latinCheckBox.setText("Latin");

        genresLabel.setText("Genres");

        dnbCheckBox.setText("D&B");

        jazzCheckBox.setText("Jazz");

        technoCheckBox.setText("Techno");

        altrockCheckBox.setText("Alt-Rock");

        bluesCheckBox.setText("Blues");

        houseCheckBox.setText("House");

        fileSelectionLabel.setText("File");

        songSelectorButton.setText("Add A Song");
        songSelectorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songSelectorButtonMouseClicked(evt);
            }
        });

        selectedSongLabel.setText("No File Selected Yet");

        addSongButton.setText("Add Song");
        addSongButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addSongButtonMouseClicked(evt);
            }
        });
        addSongButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongButtonActionPerformed(evt);
            }
        });

        albumArtLabel.setText("Album Art");

        albumArtFrame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        albumArtFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albumArtFrameMouseClicked(evt);
            }
        });

        addArtButton.setText("Add Art");
        addArtButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addArtButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(newSongLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(addSongButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fileSelectionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(artistName))
                                    .addComponent(albumArtLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameField)
                                    .addComponent(artistField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(songSelectorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addArtButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(albumArtFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(selectedSongLabel))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genresLabel)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rapCheckBox)
                                    .addComponent(popCheckBox)
                                    .addComponent(kPopCheckBox)
                                    .addComponent(latinCheckBox)
                                    .addComponent(metalCheckBox))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(funkCheckBox)
                                    .addComponent(rockCheckBox)
                                    .addComponent(rnbCheckBox)
                                    .addComponent(countryCheckBox)
                                    .addComponent(edmCheckBox))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(altrockCheckBox)
                                    .addComponent(jazzCheckBox)
                                    .addComponent(dnbCheckBox)
                                    .addComponent(SoulCheckBox)
                                    .addComponent(technoCheckBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reggaeCheckBox)
                                    .addComponent(bluesCheckBox)
                                    .addComponent(punkCheckBox)
                                    .addComponent(dubstepCheckBox)
                                    .addComponent(houseCheckBox))))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newSongLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artistField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(artistName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileSelectionLabel)
                    .addComponent(songSelectorButton)
                    .addComponent(selectedSongLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(albumArtLabel)
                    .addComponent(albumArtFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addArtButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rapCheckBox)
                    .addComponent(rockCheckBox)
                    .addComponent(genresLabel)
                    .addComponent(dnbCheckBox)
                    .addComponent(dubstepCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rnbCheckBox)
                    .addComponent(popCheckBox)
                    .addComponent(jazzCheckBox)
                    .addComponent(punkCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryCheckBox)
                    .addComponent(kPopCheckBox)
                    .addComponent(technoCheckBox)
                    .addComponent(bluesCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edmCheckBox)
                    .addComponent(latinCheckBox)
                    .addComponent(altrockCheckBox)
                    .addComponent(houseCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(funkCheckBox)
                    .addComponent(SoulCheckBox)
                    .addComponent(metalCheckBox)
                    .addComponent(reggaeCheckBox))
                .addGap(31, 31, 31)
                .addComponent(addSongButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<String> takeCheckBoxGenres() {
        
        ArrayList<String> genreList = new ArrayList<>();
        
        if (rapCheckBox.isSelected()) genreList.add("rap");
        if (rockCheckBox.isSelected()) genreList.add("rock");
        if (rnbCheckBox.isSelected()) genreList.add("rnb");
        if (popCheckBox.isSelected()) genreList.add("pop");
        if (countryCheckBox.isSelected()) genreList.add("country");
        if (kPopCheckBox.isSelected()) genreList.add("kPop");
        if (edmCheckBox.isSelected()) genreList.add("edm");
        if (latinCheckBox.isSelected()) genreList.add("latin");
        if (dnbCheckBox.isSelected()) genreList.add("dnb");
        if (jazzCheckBox.isSelected()) genreList.add("jazz");
        if (technoCheckBox.isSelected()) genreList.add("techno");
        if (altrockCheckBox.isSelected()) genreList.add("alt rock");
        if (bluesCheckBox.isSelected()) genreList.add("blues");
        if (houseCheckBox.isSelected()) genreList.add("house");
        if (dubstepCheckBox.isSelected()) genreList.add("dubstep");
        if (punkCheckBox.isSelected()) genreList.add("punk");
        if (SoulCheckBox.isSelected()) genreList.add("Soul");
        if (reggaeCheckBox.isSelected()) genreList.add("reggae");
        if (funkCheckBox.isSelected()) genreList.add("funk");
        if (metalCheckBox.isSelected()) genreList.add("metal");
        
        return genreList;
        
    }
    
    private void dubstepCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dubstepCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dubstepCheckBoxActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void songSelectorButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songSelectorButtonMouseClicked
        JFileChooser fChooser = new JFileChooser();
        fChooser.showOpenDialog(null);
        File attachSong = fChooser.getSelectedFile();
        String filename = attachSong.getAbsolutePath();
        
        selectedSongLabel.setText(filename);
    }//GEN-LAST:event_songSelectorButtonMouseClicked

    private void addSongButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addSongButtonActionPerformed

    private void addSongButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSongButtonMouseClicked
        ArrayList<String> genreArrayList = takeCheckBoxGenres();
        
        String songName = nameField.getText();
        String songArtist = artistField.getText();
        DataPacket genreDataPacket = new DataPacket("UPS");
        System.out.println(genreDataPacket.getCommand());
        InetAddress address = null;
        try {
            address = InetAddress.getLocalHost();
        } catch (UnknownHostException ex) {
            Logger.getLogger(NewUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        Socket socket = null;
        try {
            socket = new Socket(address, 9090);
            NetworkInterfaces.SendDataPacket(socket, genreDataPacket);
        } catch (IOException ex) {
            Logger.getLogger(NewUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addSongButtonMouseClicked

    private void albumArtFrameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumArtFrameMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_albumArtFrameMouseClicked

    private void addArtButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addArtButtonMouseClicked
        JFileChooser fChooser = new JFileChooser();
        fChooser.showOpenDialog(null);
        File attachImage = fChooser.getSelectedFile();
        String filename = attachImage.getAbsolutePath();
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(filename));
        } catch (IOException e) {
               e.printStackTrace();
        }    
        
        Image dimg = img.getScaledInstance(albumArtFrame.getWidth(), albumArtFrame.getHeight(),
        Image.SCALE_SMOOTH);
        ImageIcon icon=new ImageIcon(dimg);
        albumArtFrame.setIcon(icon);   
    }//GEN-LAST:event_addArtButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadSong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox SoulCheckBox;
    private javax.swing.JButton addArtButton;
    private javax.swing.JButton addSongButton;
    private javax.swing.JLabel albumArtFrame;
    private javax.swing.JLabel albumArtLabel;
    private javax.swing.JCheckBox altrockCheckBox;
    private javax.swing.JTextField artistField;
    private javax.swing.JLabel artistName;
    private javax.swing.JCheckBox bluesCheckBox;
    private javax.swing.JCheckBox countryCheckBox;
    private javax.swing.JCheckBox dnbCheckBox;
    private javax.swing.JCheckBox dubstepCheckBox;
    private javax.swing.JCheckBox edmCheckBox;
    private javax.swing.JLabel fileSelectionLabel;
    private javax.swing.JCheckBox funkCheckBox;
    private javax.swing.JLabel genresLabel;
    private javax.swing.JCheckBox houseCheckBox;
    private javax.swing.JCheckBox jazzCheckBox;
    private javax.swing.JCheckBox kPopCheckBox;
    private javax.swing.JCheckBox latinCheckBox;
    private javax.swing.JCheckBox metalCheckBox;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel newSongLabel;
    private javax.swing.JCheckBox popCheckBox;
    private javax.swing.JCheckBox punkCheckBox;
    private javax.swing.JCheckBox rapCheckBox;
    private javax.swing.JCheckBox reggaeCheckBox;
    private javax.swing.JCheckBox rnbCheckBox;
    private javax.swing.JCheckBox rockCheckBox;
    private javax.swing.JLabel selectedSongLabel;
    private javax.swing.JButton songSelectorButton;
    private javax.swing.JCheckBox technoCheckBox;
    // End of variables declaration//GEN-END:variables
}
